---
- name: "Check if cluster directory already exists"
  ansible.builtin.stat:
    path: "{{ working_dir }}/install/{{ ocp_cluster.name }}"
  register: cluster_dir_stat

- name: Skip provisioning if cluster exists
  ansible.builtin.debug:
    msg: "Cluster directory already exists, skipping provisioning..."
  when: cluster_dir_stat.stat.exists

- name: Provision Cluster on AWS
  block:
    - name: create install_dir to work in
      ansible.builtin.file:
        state: directory
        path: "{{ working_dir }}/install/{{ ocp_cluster.name }}"
      register: install_dir

    - name: print install_dir location for admin
      ansible.builtin.debug:
        msg: "The working directory location is {{ install_dir.path }}"

    - name: Create .aws directory
      ansible.builtin.file:
        path: "~/.aws"
        state: directory
        mode: "0755"

    - name: Populate .aws/credentials file
      ansible.builtin.copy:
        dest: "~/.aws/credentials"
        content: |
          [default]
          aws_access_key_id = {{ aws_access_key_id }}
          aws_secret_access_key = {{ aws_secret_access_key }}
          region = {{ aws_region }}
        mode: "0600"
      vars:
        aws_access_key_id: "{{ aws.aws_access_key_id }}"
        aws_secret_access_key: "{{ aws.aws_secret_access_key }}"
        aws_region: "{{ aws.aws_region }}"

    - name: Populate install-config template
      ansible.builtin.template:
        src: "{{ role_path }}/templates/install-config.yaml.j2"
        dest: "{{ install_dir.path }}/install-config.yaml"

    - name: run IPI installer
      command: "{{ bin_dir }}/openshift-install create cluster --dir={{ install_dir.path }} --log-level=debug"
      async: 3600
      poll: 0
      register: cluster_deploy

    - name: Check the status of the install
      ansible.builtin.async_status:
        jid: "{{ cluster_deploy.ansible_job_id }}"
      register: job_status
      until: job_status.finished
      retries: 120
      delay: 30
      ignore_errors: true
  when: not cluster_dir_stat.stat.exists
