---
#- name: "Check for Existing Login"
#  shell: "oc whoami"
#  register: result
#  failed_when: ( result.rc not in [ 0, 1 ] )
#
- set_fact:
    k8s_admin_port: "{{ k8s_port }}"
  when: k8s_admin_port is undefined
#
#- set_fact:
#    insecure: "{{ '--insecure-skip-tls-verify' if k8s_admin_port == 6443 else '' }}"
#
#- name: "OpenShift CLI login"
#  shell: "oc login -u {{ user }} -p {{ password }} https://api.{{ cluster_address }}:{{ k8s_admin_port }} {{ insecure }}"
#  when: result.rc == 1 or force == true

- name: Check current OpenShift login status
  ansible.builtin.command: oc whoami
  register: oc_whoami_check_result
  ignore_errors: yes # Do not fail the playbook if not logged in
  changed_when: false # This command does not change the system state.

- name: Set fact for current OC logged-in user
  ansible.builtin.set_fact:
    current_oc_user: "{{ oc_whoami_check_result.stdout | default('') | trim }}"
  # Set current_oc_user to an empty string if oc_whoami failed or returned nothing.

- name: Display current OC user (if any)
  ansible.builtin.debug:
    msg: "Current OpenShift user: '{{ current_oc_user }}'"
  when: current_oc_user | length > 0

- name: Check if desired user is already logged in
  ansible.builtin.set_fact:
    already_logged_in: "{{ current_oc_user.split(':')[-1] == openshift_username }}"

- name: Skip login if desired user is already logged in
  ansible.builtin.debug:
    msg: "Desired user '{{ openshift_username }}' is already logged in. Skipping login steps."
  when: already_logged_in | bool

- name: Log in to OpenShift using a token via oc command
  # This task will execute if 'openshift_token' is defined AND
  # the desired user is NOT already logged in (or no desired user was specified).
  ansible.builtin.command: >
    oc login
    --token={{ openshift_token }}
    --server=https://api.{{ cluster_address }}:{{ k8s_admin_port }}
    {% if k8s_admin_port == 6443 %}--insecure-skip-tls-verify=true{% endif %}
  when:
    - openshift_token is defined
    - not already_logged_in | bool
  # Register the result to check for errors.
  register: oc_login_token_result
  # Mark as changed if the command runs successfully (implies a change in login status)
  changed_when: oc_login_token_result.rc == 0
  # Fail if the command returns a non-zero exit code
  failed_when: oc_login_token_result.rc != 0

- name: Log in to OpenShift using username and password via oc command
  # This task will execute ONLY if 'openshift_token' is NOT defined,
  # and both 'openshift_username' and 'openshift_password' ARE defined AND
  # the desired user is NOT already logged in (or no desired user was specified).
  ansible.builtin.command: >
    oc login
    --username={{ openshift_username }}
    --password={{ openshift_password }}
    --server=https://api.{{ cluster_address }}:{{ k8s_admin_port }}
    {% if k8s_admin_port == 6443 %}--insecure-skip-tls-verify=true{% endif %}
  when:
    - openshift_token is not defined
    - openshift_username is defined
    - openshift_password is defined
    - not already_logged_in | bool
  # Register the result to check for errors.
  register: oc_login_up_result
  # Mark as changed if the command runs successfully
  changed_when: oc_login_up_result.rc == 0
  # Fail if the command returns a non-zero exit code
  failed_when: oc_login_up_result.rc != 0

- name: Verify OpenShift login status with 'oc whoami' after login attempt
  # This task runs the 'oc whoami' command to confirm a successful login.
  # It will run if either authentication method was attempted OR if a desired user was not logged in.
  ansible.builtin.command: oc whoami
  register: oc_whoami_final_result
  changed_when: false # This command does not change the system state.
  # Only fail if the command genuinely indicates a login failure, not just "not logged in" if we skipped login.
  failed_when: oc_whoami_final_result.rc != 0 and 'token is invalid' not in oc_whoami_final_result.stderr

- name: Display logged in user (final status)
  # Shows the output of 'oc whoami' for verification.
  ansible.builtin.debug:
    msg: "Final OpenShift logged-in user: {{ oc_whoami_final_result.stdout | default('N/A - Check previous task for errors.') }}"
  when: oc_whoami_final_result.stdout is defined and oc_whoami_final_result.stdout | length > 0